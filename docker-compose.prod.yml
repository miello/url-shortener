# Use postgres/example user/password credentials
version: '3.1'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    
    depends_on:
      - frontend
      - backend

    volumes:
      - /etc/letsencrypt:/cert
      - ./certbot-var:/var/lib/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/ssl/certs
      - ./certbot/www:/var/www/certbot/:ro

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/cert
      - ./certbot-var:/var/lib/letsencrypt
      - ./certbot/www/:/var/www/certbot/:rw
    depends_on:
      - nginx
    command: certonly --webroot -w /var/www/certbot --email ${EMAIL_REGISTER} --agree-tos --no-eff-email --staging -d ${URL_1} -d ${URL_2}

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

    volumes:
      - ./backend/db:/var/lib/postgresqgl/data

  frontend:
    build:
      context: frontend/
      dockerfile: Dockerfile

    depends_on:
      - backend

  backend:
    build:
      context: backend/
      dockerfile: Dockerfile

    depends_on:
      - db
